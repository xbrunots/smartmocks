<!DOCTYPE html>
<html>

<head>
    <title>@{{data.username}}</title>
    <link rel="stylesheet" href="/assets/xel/themes/material.css">
    <script src="/assets/xel/xel.min.js"></script>
    <script src="/scripts/jquery.js"></script>
    <script src="/scripts/cache.js"></script>
    <script src="/scripts/life.js"></script>
    <link rel="stylesheet" href="//fonts.googleapis.com/css?family=Roboto+Slab">
    <link rel="stylesheet" href="assets/css/animate.css" />
    <link href="/assets/icons/css/all.css" rel="stylesheet">
    <!--load all styles -->


    <link rel="icon" href="/assets/rocketbase_logo_transparent.png">
    <link rel="icon" type="image/png" href="/assets/rocketbase_logo_transparent.png">


    <style>
        @font-face {
            font-family: 'Montserrat_Black';
            src: url('/assets/fonts/Montserrat-Black.ttf') format('truetype');
        }

        @font-face {
            font-family: 'Montserrat_Bold';
            src: url('/assets/fonts/Montserrat-Bold.ttf') format('truetype');
        }

        @font-face {
            font-family: 'Montserrat_Light';
            src: url('/assets/fonts/Montserrat-Light.ttf') format('truetype');
        }

        @font-face {
            font-family: 'Montserrat_Regular';
            src: url('/assets/fonts/Montserrat-Regular.ttf') format('truetype');
        }

        @font-face {
            font-family: 'Montserrat_This';
            src: url('/assets/fonts/Montserrat-This.ttf') format('truetype');
        }

        /* START TOOLTIP STYLES */
        [tooltip] {
            position: relative;
            /* opinion 1 */
        }

        /* Applies to all tooltips */
        [tooltip]::before,
        [tooltip]::after {
            text-transform: none;
            /* opinion 2 */
            font-size: .9em;
            /* opinion 3 */
            line-height: 1;
            user-select: none;
            pointer-events: none;
            position: absolute;
            display: none;
            opacity: 0;

        }

        [tooltip]::before {
            content: '';
            border: 5px solid transparent;
            /* opinion 4 */
            z-index: 1001;
            /* absurdity 1 */
        }

        [tooltip]::after {
            content: attr(tooltip);
            /* magic! */

            /* most of the rest of this is opinion */
            font-family: Helvetica, sans-serif;
            text-align: center;

            /* 
    Let the content set the size of the tooltips 
    but this will also keep them from being obnoxious
    */
            min-width: 3em;
            max-width: 500px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            padding: 1ch 1.5ch;
            border-radius: .3ch;
            box-shadow: 0 1em 2em -.5em rgba(0, 0, 0, 0.35);
            background: #000000;
            color: #fff;
            z-index: 1000;
            /* absurdity 2 */
        }

        /* Make the tooltips respond to hover */
        [tooltip]:hover::before,
        [tooltip]:hover::after {
            display: block;
        }

        /* don't show empty tooltips */
        [tooltip='']::before,
        [tooltip='']::after {
            display: none !important;
        }

        /* FLOW: UP */
        [tooltip]:not([flow])::before,
        [tooltip][flow^="up"]::before {
            bottom: 100%;
            border-bottom-width: 0;
            border-top-color: #000;
        }

        [tooltip]:not([flow])::after,
        [tooltip][flow^="up"]::after {
            bottom: calc(100% + 5px);
        }

        [tooltip]:not([flow])::before,
        [tooltip]:not([flow])::after,
        [tooltip][flow^="up"]::before,
        [tooltip][flow^="up"]::after {
            left: 50%;
            transform: translate(-50%, -.5em);
        }

        /* FLOW: DOWN */
        [tooltip][flow^="down"]::before {
            top: 100%;
            border-top-width: 0;
            border-bottom-color: #333;
        }

        [tooltip][flow^="down"]::after {
            top: calc(100% + 5px);
        }

        [tooltip][flow^="down"]::before,
        [tooltip][flow^="down"]::after {
            left: 50%;
            transform: translate(-50%, .5em);
        }

        /* FLOW: LEFT */
        [tooltip][flow^="left"]::before {
            top: 50%;
            border-right-width: 0;
            border-left-color: #333;
            left: calc(0em - 5px);
            transform: translate(-.5em, -50%);
        }

        [tooltip][flow^="left"]::after {
            top: 50%;
            right: calc(100% + 5px);
            transform: translate(-.5em, -50%);
        }

        /* FLOW: RIGHT */
        [tooltip][flow^="right"]::before {
            top: 50%;
            border-left-width: 0;
            border-right-color: #333;
            right: calc(0em - 5px);
            transform: translate(.5em, -50%);
        }

        [tooltip][flow^="right"]::after {
            top: 50%;
            left: calc(100% + 5px);
            transform: translate(.5em, -50%);
        }

        /* KEYFRAMES */
        @keyframes tooltips-vert {
            to {
                opacity: .9;
                transform: translate(-50%, 0);
            }
        }

        @keyframes tooltips-horz {
            to {
                opacity: .9;
                transform: translate(0, -50%);
            }
        }

        /* FX All The Things */
        [tooltip]:not([flow]):hover::before,
        [tooltip]:not([flow]):hover::after,
        [tooltip][flow^="up"]:hover::before,
        [tooltip][flow^="up"]:hover::after,
        [tooltip][flow^="down"]:hover::before,
        [tooltip][flow^="down"]:hover::after {
            animation: tooltips-vert 300ms ease-out forwards;
        }

        [tooltip][flow^="left"]:hover::before,
        [tooltip][flow^="left"]:hover::after,
        [tooltip][flow^="right"]:hover::before,
        [tooltip][flow^="right"]:hover::after {
            animation: tooltips-horz 300ms ease-out forwards;
        }





        .center {
            display: flex;
            align-items: center;
            justify-content: center;
        }




        /* UNRELATED to tooltips */


        main {
            flex: 1 1 100vh;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
        }

        aside {
            flex: none;
            display: flex;
            align-items: center;
            justify-content: center;
            background: #49b293;
            color: #fff;
            padding: 1em;
        }

        main div {
            text-align: center;
            color: #353539;
        }

        main span {
            padding: .5em 1em;
            margin: .5em;
            display: inline-block;
            background: #dedede;
        }

        aside a {
            color: inherit;
            text-decoration: none;
            font-weight: bold;
            display: inline-block;
            padding: .4em 1em;
        }

        *,
        body {
            font-family: 'Montserrat_Regular';
        }

        body {
            width: 94%;
            padding-left: 3%;
            background: #f3f3f3;
            padding-top: 44px;
        }


        .header-header {
            height: 44px;
            display: block;
            background: white;
            position: fixed;
            top: 0px;
            width: 100%;
            left: 0px;
            box-shadow: 0px 0px 5px black;
            Z-INDEX: 99999999999;

        }

        .animateDown {

            animation: fadeInDown;
            /* referring directly to the animation's @keyframe declaration */
            animation-duration: 0.5s;
        }

        .header-menubar-right {
            cursor: pointer;

            max-width: 80px;
            float: right;
            background: transparent;
            height: 42px;
            box-shadow: none !important;
            height: 26px;
            margin-top: 9px;
            border-radius: 50px !important;
        }

        .header-header>line {
            position: absolute;
            width: 1000%;
            height: 3px;
            bottom: -2px;
            background: rgb(82, 113, 255);
            background: -moz-linear-gradient(90deg, rgba(82, 113, 255, 1) 0%, rgba(255, 87, 87, 1) 83%, rgba(255, 145, 77, 1) 100%);
            background: -webkit-linear-gradient(90deg, rgba(82, 113, 255, 1) 0%, rgba(255, 87, 87, 1) 83%, rgba(255, 145, 77, 1) 100%);
            background: linear-gradient(90deg, rgba(82, 113, 255, 1) 0%, rgba(255, 87, 87, 1) 83%, rgba(255, 145, 77, 1) 100%);
            filter: progid:DXImageTransform.Microsoft.gradient(startColorstr="#5271ff", endColorstr="#ff914d", GradientType=1);
        }

        .header-header>div {
            height: 100%;
            display: inline-flex;
            position: absolute;
            top: 0px;
        }

        .header-header>.div-photo {
            height: 100%;
            display: inline-flex;
            position: absolute;
            top: 0px;
            right: 28px;
        }

        .header-header>div>.header-menu-img:hover {
            border-color: #c0c0c03d;
        }

        .header-menu-img {
            width: 32px !important;
            height: 32px !important;
        }

        .header-header>div>.header-menu-img {
            width: 32px !important;
            height: 32px !important;
            background: #000000;
            border-radius: 50px;
            right: 14px;
            margin-top: 5px;
            cursor: pointer;
            position: absolute;
            top: -2px;
            border: 3px solid #c0c0c03d;
            border-color: black;
        }

        .header-header>div>p {
            width: auto;
            height: auto;
            margin: 0;
            color: white;
            display: inline-table;
            margin-top: 10px;
            margin-left: 5px;
            text-transform: lowercase;
            font-weight: 900;
            font-size: 15px;
        }

        .header-logo {
            width: 32px;
            height: 32px;
            border-radius: 50px;
            margin-top: 6px;
        }

        #btnhome,
        #btnhome>img,
        #btnhome>p {
            cursor: pointer;
            color: black;
        }

        #btnhome {

            padding-left: 10px;
            padding-right: 10px;
            margin-left: 20px;
        }

        .logo-load {
            height: 47px;
            position: absolute;
            z-index: 3;
            --animate-repeat: 180;
            border-radius: 50%;
        }

        .logo-load2 {
            height: 60px;
            position: absolute;
            z-index: 3;
            --animate-repeat: 180;
        }

        .loaderH1 {
            z-index: 102;
            padding-top: 60px;
            color: #000000;
            font-size: 15px;
            z-index: 102;
            font-weight: 100;
        }
    </style>

    <script>

        const animateCSS = (element, animation, prefix = 'animate__') =>
            // We create a Promise and return it
            new Promise((resolve, reject) => {
                const animationName = `${prefix}${animation}`;
                const node = document.querySelector(element);

                $(node).addClass(`${prefix}animated`);
                $(node).addClass(animationName);

                $(node).addClass(animationName);

                // When the animation ends, we clean the classes and resolve the Promise
                function handleAnimationEnd() {
                    $(node).removeClass(`${prefix}animated`);
                    $(node).removeClass(animationName);
                    node.removeEventListener('animationend', handleAnimationEnd);

                    resolve('Animation ended');
                }
                $(node).bind('animationend', handleAnimationEnd);
            });


        $(document).on('click', '#header-menu-show', function () {
            if (parseInt($('.menu-header-perfil').css('top')) < 0) {
                $('.menu-header-perfil').animate({
                    top: '44px'
                }, 200)
            } else {
                $('.menu-header-perfil').animate({
                    top: '-200px'
                }, 200)
            }
        })
        $(document).on('mouseleave', '.menu-header-perfil', function () {
            $('.menu-header-perfil').animate({
                top: '-200px'
            }, 200)
        })
        $(document).on('click', '#btnhome', function () {
            window.location.href = window.location.origin + "/apps"
        })

        $(document).on('click', '.nav-span-app', function () {
            window.location.href = window.location.origin + "/apps"
        })
        $(document).on('click', '.navbar-root', function () {
            window.location.href = window.location.origin + "/apps"
        })


        function progressLine() {

            $('.header-header>line').animate({
                width: '100%'
            }, 1500)
            setTimeout(function () {
                $('#loader').fadeOut();
            }, 1000);

            if ($('current-module').text() != "console") {

            }
        }

        document.write('<div id="loader"> <h1 class="loaderH1"> {{data.loading_prefix}} <strong>{{data.loading}}</strong></h1><img class="logo-load !important;" ' +
            'src="/assets/rocketbase_logo_outbox.png"/> ' +
            ' <img class="logo-load2 !important;" ' +
            'src="/assets/rocketbase_logo_inbox.png"/></div>');
        animateCSS('.logo-load', 'rotateInInfinite')
        animateCSS('.logo-load2', 'rotateInInversefinite')
        animateCSS('#loader', 'pulseInifite')

        function selectModuleManagement() {
            $(".go-module[data-module='management']").attr("selected", "selected");
        }


    </script>

</head>

<body onload="progressLine();">
    {{>global}}
    <div class="header-header {{headerAnimation}}">
        <div id="btnhome">
            <img class="header-logo" src="/assets/rocketbase_logo_transparent.png" />
            <p>Rocketbase</p>
        </div>

        <x-menubar class="header-menubar-right">
            <x-menuitem id="header-menu-show">
                <img class="header-menu-img" src="{{data.photo}}" />


        </x-menubar>
        <line></line>
    </div>

    <style>
        .menu-header-perfil {
            background: white;
            min-width: 260px;
            max-width: 300px;
            position: fixed;
            top: -200px;
            z-index: 8;
            right: 20px;
            border-radius: 0 0 6PX 6PX;
            BOX-SHADOW: 0 6PX 6PX #35353542;
        }

        .menu-header-perfil>x-menuitem {
            cursor: pointer;
        }

        .menu-header-perfil>x-menuitem:hover {
            background: #ededed;
        }

        #header-menu-show {
            cursor: pointer !important;
            border-radius: 40px;
            width: 38px;
            height: 38px;
            padding: inherit;
            padding-left: 3px;
        }

        .borderGradient {
            border: solid 2px transparent !important;
            background: rgb(82, 113, 255);
            background: -moz-linear-gradient(90deg, rgba(82, 113, 255, 1) 0%, rgba(255, 87, 87, 1) 83%, rgba(255, 145, 77, 1) 100%) !important;
            background: -webkit-linear-gradient(90deg, rgba(82, 113, 255, 1) 0%, rgba(255, 87, 87, 1) 83%, rgba(255, 145, 77, 1) 100%) !important;
            background: linear-gradient(90deg, rgba(82, 113, 255, 1) 0%, rgba(255, 87, 87, 1) 83%, rgba(255, 145, 77, 1) 100%) !important filter: progid:DXImageTransform.Microsoft.gradient(startColorstr="#5271ff", endColorstr="#ff914d", GradientType=1) !important;
            background-origin: border-box background-clip: content-box, border-box !important;
            box-shadow: 2px 1000px 1px #fff inset !important;
        }

        #loader {
            position: fixed;
            z-index: 99999;
            width: 100%;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            background: #ffffffbf;
            top: 0px;
            left: 0px;
        }
    </style>

    <div class="menu-header-perfil">

        <x-menuitem>
            <x-label>Perfil</x-label>
        </x-menuitem>


        <x-menuitem>
            <x-label>Configurações</x-label>
        </x-menuitem>

        <hr>
        <x-menuitem onclick="GLOBAL.logoff();">
            <x-label>Logoff</x-label>
        </x-menuitem>
    </div>